version: '3'
services:
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.5.1-debian-11-r3
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      # volumes:
      #   - ./kafka:/bitnami/kafka:rw
    ports:
      - 9094:9094
      - 9092:9092
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - botdetector-network

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
      - JVM_OPTS=-Xms32M -Xmx64M
      - SERVER_SERVLET_CONTEXTPATH=/
    ports:
      - 9000:9000
    restart: on-failure
    networks:
      - botdetector-network
    depends_on:
      kafka:
        condition: service_healthy

  kafka_setup:
    container_name: kafka_setup
    build:
      context: ./kafka_setup
    environment:
      - KAFKA_BROKER=kafka:9092
    networks:
      - botdetector-network
    depends_on:
      kafka:
        condition: service_healthy

  mysql:
    container_name: database
    build:
      context: ./mysql
    image: bot-detector/mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root_bot_buster
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # - ./mysql/mount:/var/lib/mysql # creates persistence
    ports:
      - 3306:3306
    networks:
      - botdetector-network

  public_api:
    container_name: public_api
    build:
      context: .
      dockerfile: Dockerfile
      target: base
      args:
        root_path: /
        api_port: 5000
    # command: bash -c "apt update && apt install -y curl && sleep infinity"
    command: uvicorn src.core.server:app --host 0.0.0.0 --reload --reload-include src/*
    ports:
      - 5000:5000
    networks:
      - botdetector-network
    # this overrides the env_file for the specific variable
    environment:
      - KAFKA_HOST=kafka:9092
      - DATABASE_URL=mysql+aiomysql://root:root_bot_buster@mysql:3306/playerdata
      - env=DEV
      - pool_recycle=299
      - pool_timeout=20
    # env_file:
    #   - .env
    depends_on:
      - kafka_setup
      - mysql

networks:
  botdetector-network:
